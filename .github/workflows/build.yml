name: Build Geode Tools

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake g++ make zip

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake zip

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: List built files
        run: ls -R build

      - name: Zip binaries
        shell: bash
        run: |
          BUILD_DIR="build"
          if [ -d "$BUILD_DIR/${{ matrix.build_type }}" ]; then
            BUILD_DIR="$BUILD_DIR/${{ matrix.build_type }}"
          fi
          ZIP_FILE="gpatch-${{ matrix.os }}.zip"
          cd "$BUILD_DIR"
          zip -r "../../$ZIP_FILE" *

      - name: Zip binaries (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $BUILD_DIR = "build"
          if (Test-Path "$BUILD_DIR\${{ matrix.build_type }}") {
            $BUILD_DIR = "$BUILD_DIR\${{ matrix.build_type }}"
          }
          $ZIP_FILE = "gpatch-${{ matrix.os }}.zip"
          Compress-Archive -Path "$BUILD_DIR\*" -DestinationPath "$ZIP_FILE"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gpatch-${{ matrix.os }}
          path: |
            gpatch-${{ matrix.os }}.zip
